name: Account Deletion Maintenance

on:
  schedule:
    # Ex√©cute la maintenance compl√®te tous les jours √† 2h00 UTC
    - cron: '0 2 * * *'
    # Ex√©cute le nettoyage des demandes expir√©es toutes les 6 heures
    - cron: '0 */6 * * *'
  
  # Permet l'ex√©cution manuelle depuis GitHub Actions
  workflow_dispatch:
    inputs:
      action:
        description: 'Action √† ex√©cuter'
        required: true
        default: 'full_maintenance'
        type: choice
        options:
          - cleanup_expired_requests
          - execute_pending_deletions
          - full_maintenance

jobs:
  maintenance:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Determine action
        id: determine-action
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "action=${{ github.event.inputs.action }}" >> $GITHUB_OUTPUT
          elif [ "${{ github.event.schedule }}" == "0 2 * * *" ]; then
            echo "action=full_maintenance" >> $GITHUB_OUTPUT
          else
            echo "action=cleanup_expired_requests" >> $GITHUB_OUTPUT
          fi
      
      - name: Execute maintenance task
        run: |
          ACTION="${{ steps.determine-action.outputs.action }}"
          echo "üßπ Executing maintenance action: $ACTION"
          
          RESPONSE=$(curl -X POST \
            -H "Content-Type: application/json" \
            -d "{\"action\":\"$ACTION\",\"adminSecret\":\"${{ secrets.ADMIN_SECRET }}\"}" \
            "${{ vars.APP_URL }}/api/cleanup")
          
          echo "Response: $RESPONSE"
          
          # V√©rifier si la r√©ponse contient "success": true
          if echo "$RESPONSE" | grep -q '"success":true'; then
            echo "‚úÖ Maintenance task completed successfully"
          else
            echo "‚ùå Maintenance task failed"
            echo "Response: $RESPONSE"
            exit 1
          fi
      
      - name: Health Check
        if: always()
        run: |
          echo "üîç Checking system health..."
          HEALTH_RESPONSE=$(curl -s "${{ vars.APP_URL }}/api/cleanup")
          echo "Health status: $HEALTH_RESPONSE"
      
      - name: Notify on failure
        if: failure()
        run: |
          echo "üö® Maintenance task failed!"
          echo "Action: ${{ steps.determine-action.outputs.action }}"
          echo "Check the logs above for details."
          # Ici vous pouvez ajouter une notification Slack, Discord, etc.